{"version":3,"sources":["images/Tisperse3.png","images/Mumbai.png","images/Fuji.png","images/BSC.png","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["ethers","providers","Web3Provider","window","ethereum","Login","useState","account","setAccount","setInputAdd","finalAdd","setFinalAdd","amount","setAmount","value","setValue","setCount","chain","SetChain","value1","setValue1","visible","setVisible","transactionId","setTransactionId","accountShow","setAccountShow","selectChain","balance","setBalance","erc20","setErc20","selectMode","setSelectMode","ERC20Balance","setERC20Balance","setTokenAddress","erc20text","seterc20Text","erc20Class","seterc20Class","chainObj","img","Polygon","name","url","BSC","Fuji","requestAccount","a","console","log","request","method","accounts","substring","provider","getBalance","balanc","utils","formatEther","alert","connectWallet","params","chainId","rpcUrls","chainName","nativeCurrency","symbol","decimals","blockExplorerUrls","class","style","src","Tisperse","id","href","role","onClick","type","placeholder","rows","cols","onChange","e","target","signer","getSigner","erc20contract","Contract","balanceOf","erc20bal","c","arr","arr2","arr3","sum","i","length","push","j","str2","parseFloat","parseEther","contractAddress","contract","disperseEther","toString","then","transaction","hash","catch","err","disperseToken","map","x","y","z","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.136eb196.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Tisperse3.ad70607a.png\";","export default __webpack_public_path__ + \"static/media/Mumbai.51b3f0d2.png\";","export default __webpack_public_path__ + \"static/media/Fuji.113f2df2.png\";","export default __webpack_public_path__ + \"static/media/BSC.d4cbb4b4.png\";","import React,{useState} from 'react'\r\nimport Tisperse from '../images/Tisperse3.png'\r\nimport Polygon from '../images/Mumbai.png'\r\nimport Fuji from '../images/Fuji.png'\r\nimport BSC from '../images/BSC.png'\r\nimport { ethers } from 'ethers';\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport {Routes, Route, useNavigate} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nimport './Home.css'\r\nimport { ErrorFragment } from 'ethers/lib/utils'\r\n\r\n\r\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\r\nfunction ModalDialog() {\r\n    const [isShow, invokeModal] = React.useState(false)\r\n    const initModal = () => {\r\n      return invokeModal(!false)\r\n    }\r\n}\r\n  \r\n\r\nfunction Login() {\r\n    const [account,setAccount]=useState('Connect Wallet')\r\n    const [uploadName,setUploadName]=useState('')\r\n    const [uploadLink,setUploadLink]=useState('')\r\n    const [approvalAddress,setApprovalAddress]=useState('')\r\n    const [approvalName,setApprovalName]=useState('')\r\n    const [viewName,setViewName]=useState('')\r\n    const [viewAddress,setViewAddress]=useState('')\r\n    const [inputAdd,setInputAdd]=useState()\r\n    const [finalAdd,setFinalAdd]=useState([])\r\n    const [amount,setAmount]=useState(0)\r\n    const [value,setValue]=useState([{}])\r\n    const [count,setCount]=useState(0)\r\n    const [chain,SetChain]=useState('')\r\n    const [value1,setValue1]=useState([])\r\n    const [visible,setVisible]=useState('hidden')\r\n    const [transactionId, setTransactionId] = useState('');\r\n    const [accountShow,setAccountShow]=useState('')\r\n    const [selectChain,setSelectChain]=useState('Select Chain')\r\n    const [balance,setBalance]=useState(0)\r\n    const [erc20,setErc20]=useState('')\r\n    const [selectMode, setSelectMode]=useState('Select Token')\r\n    const [ERC20Balance,setERC20Balance]=useState(0)\r\n    const [tokenAddress,setTokenAddress]=useState('')\r\n    const [erc20text,seterc20Text]=useState('Import Token')\r\n    const [erc20Class,seterc20Class]=useState('button-31')\r\n    \r\n    const chainObj={\r\n\r\n      \"0x2370052a62F20aBb250eD8031b77108fee61e882\":{\r\n        img:Polygon,\r\n        name:\"Polygon Mumbai\",\r\n        url:\"https://mumbai.polygonscan.com/tx/\"\r\n    },\r\n\r\n    \"0x96f0D615EAf63875b094E7591f0735B2315711c3\":{\r\n      img:BSC,\r\n      name:\"BSC Testnet\",\r\n      url:\"https://testnet.bscscan.com/tx/\"\r\n    },\r\n\r\n    \"0x9e6ED12F3531d80671be36e319d5Bc53B106C2bF\":{\r\n      img:Fuji,\r\n      name:\"Avalanche Fuji\",\r\n      url:\"https://testnet.snowtrace.io/tx/\"\r\n      \r\n    }\r\n    }\r\n    const sendMaticToken = async () => {\r\n        try {\r\n          if (typeof window.ethereum !== 'undefined') {\r\n            await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n    \r\n            \r\n            const polygonMainnetRPC = 'https://rpc.ankr.com/polygon_mumbai';\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n    \r\n            const toAddress = await signer.getAddress(); \r\n            const value = ethers.utils.parseEther('0'); \r\n    \r\n            const transaction = {\r\n              to: toAddress,\r\n              value: value,\r\n            };\r\n    \r\n            const transactionResponse = await signer.sendTransaction(transaction);\r\n    \r\n            setTransactionId(transactionResponse.hash);\r\n          } else {\r\n            alert('Please install MetaMask.');\r\n          }\r\n        } catch (error) {\r\n          console.error('An error occurred:', error.message);\r\n          alert(`An error occurred: ${error.message}`);\r\n        }\r\n      };\r\n    const connectwalletHandler = () => {\r\n        if (window.Ethereum) {\r\n            provider.send(\"eth_requestAccounts\", []).then(async () => {\r\n                await accountChangedHandler(provider.getSigner());\r\n            })\r\n        } \r\n    }\r\n    const accountChangedHandler = async (newAccount) => {\r\n        const accounts = await newAccount.getAddress();\r\n        setAccount(accounts)\r\n       \r\n    }\r\n    async function qq(){\r\n\r\n  }\r\n\r\n  async function requestAccount() {\r\n    console.log('Requesting account...');\r\n\r\n    // ❌ Check if Meta Mask Extension exists \r\n    if(window.ethereum) {\r\n      console.log('detected');\r\n\r\n      try {\r\n        const accounts = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        setAccount(accounts[0].substring(0,4)+\"....\"+accounts[0].substring(38,42));\r\n        setAccountShow(accounts[0])\r\n\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const balanc=await provider.getBalance(accounts[0]);\r\n        setBalance(ethers.utils.formatEther(balanc))\r\n\r\n      } catch (error) {\r\n        console.log('Error connecting...');\r\n      }\r\n\r\n    } else {\r\n      alert('Meta Mask not detected');\r\n    }\r\n  }\r\n\r\n\r\n  async function connectWallet() {\r\n    if(typeof window.ethereum !== 'undefined') {\r\n      await requestAccount();\r\n\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const balanc=provider.getBalance(accountShow);\r\n      setBalance(ethers.utils.formatEther(balanc))\r\n    }\r\n  }\r\n \r\n  async function switchMumbai(){\r\n\r\n    await SetChain('0x2370052a62F20aBb250eD8031b77108fee61e882')\r\n    await window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [{\r\n            chainId: \"0x13881\",\r\n            rpcUrls: [\"https://matic-mumbai.chainstacklabs.com\"],\r\n            chainName: \"Mumbai\",\r\n            nativeCurrency: {\r\n                name: \"MATIC\",\r\n                symbol: \"MATIC\",\r\n                decimals: 18\r\n            },\r\n            blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\r\n        }]\r\n    });\r\n    connectWallet()\r\n   \r\n    \r\n  }\r\n\r\n\r\n  async function switchBSC(){\r\n    \r\n    await SetChain('0x96f0D615EAf63875b094E7591f0735B2315711c3')\r\n    try{\r\n    await window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [{\r\n            chainId: \"0x61\",\r\n            rpcUrls: [\"https://data-seed-prebsc-1-s3.binance.org:8545/\"],\r\n            chainName: \"BSC testnet\",\r\n            nativeCurrency: {\r\n                name: \"BNB\",\r\n                symbol: \"BNB\",\r\n                decimals: 18\r\n            },\r\n            blockExplorerUrls: [\"https://testnet.bscscan.com\"]\r\n        }]\r\n    });\r\n    connectWallet()\r\n  }\r\n  catch(err){\r\n    // alert(err)\r\n  }\r\n    \r\n  }\r\n\r\n  async function switchFuji(){\r\n\r\n    await SetChain('0x9e6ED12F3531d80671be36e319d5Bc53B106C2bF')\r\n    await window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [{\r\n            chainId: \"0xA869\",\r\n            rpcUrls: [\"https://api.avax-test.network/ext/bc/C/rpc\"],\r\n            chainName: \"Avalanche Testnet\",\r\n            nativeCurrency: {\r\n                name: \"AVAX\",\r\n                symbol: \"AVAX\",\r\n                decimals: 18\r\n            },\r\n            blockExplorerUrls: [\"https://testnet.snowtrace.io/\"]\r\n        }]\r\n    });\r\n    \r\n  \r\n    connectWallet()\r\n    \r\n  }\r\n\r\n  return (\r\n\r\n    <div >\r\n\r\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\" >\r\n\r\n<img style={{'width':'10em'}} src={Tisperse}></img>\r\n  \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n  \r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n    <ul class=\"navbar-nav\" >\r\n      \r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" >\r\n          {chain!=''?<img style={{'width':'12em','height':'3em'}} src={chainObj[chain].img}/>:`${selectChain}`}\r\n        </a>\r\n        <div class=\"dropdown-menu bg-dark\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n        <img class=\"dropdown-item\" style={{'width':'12em','height':'3em'}}src={Polygon} onClick={\r\n        switchMumbai\r\n       \r\n       \r\n    }></img>\r\n        <img class=\"dropdown-item\" style={{'width':'12em','height':'3em'}} src={Fuji} onClick={\r\n            switchFuji\r\n        }></img>\r\n        <img class=\"dropdown-item\" style={{'width':'12em','height':'3em'}} src={BSC}    onClick={\r\n        switchBSC\r\n       \r\n        \r\n    }></img>\r\n        </div>\r\n\r\n      </li>\r\n    </ul>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    \r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n    <ul class=\"navbar-nav\" >\r\n      \r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" >\r\n          {selectMode}\r\n        </a>\r\n        <div class=\"dropdown-menu bg-lightp-\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n        <div class=\"dropdown-item\" style={{'width':'12em','height':'3em'}}onClick={()=>{\r\n           setSelectMode('Native')\r\n        }\r\n      \r\n       \r\n       \r\n    }>Native</div>\r\n        <div class=\"dropdown-item\" style={{'width':'12em','height':'3em'}}  onClick={()=>{\r\n          setSelectMode('Other')\r\n        }\r\n           \r\n        }>Other</div>\r\n        \r\n        </div>\r\n\r\n      </li>\r\n    </ul>\r\n    </div>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\r\n    <button type=\"button\" class=\"btn btn-secondary\" onClick={\r\n        \r\n\r\n        connectWallet}>{account}</button>\r\n\r\n  </div>\r\n\r\n \r\n</nav>\r\n\r\n\r\n\r\n<div class=\"content\">\r\n\r\n    \r\n\r\n    <br></br>\r\n    {selectMode=='Other'?<div>&nbsp;&nbsp;<textarea placeholder=\"Address\" rows=\"2\" cols=\"47\" onChange={async (e)=>{setErc20(e.target.value)\r\n  \r\n  \r\n  }}></textarea>\r\n    <br></br>\r\n    <br></br>\r\n    <button class={erc20Class} role=\"button\"   onClick={async ()=>{setTokenAddress(erc20)\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    \r\n    const signer = provider.getSigner();\r\nconst erc20contract=new ethers.Contract(erc20,[\r\n{\r\n  \"inputs\": [],\r\n  \"stateMutability\": \"nonpayable\",\r\n  \"type\": \"constructor\"\r\n},\r\n{\r\n  \"anonymous\": false,\r\n  \"inputs\": [\r\n    {\r\n      \"indexed\": true,\r\n      \"internalType\": \"address\",\r\n      \"name\": \"owner\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"indexed\": true,\r\n      \"internalType\": \"address\",\r\n      \"name\": \"spender\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"indexed\": false,\r\n      \"internalType\": \"uint256\",\r\n      \"name\": \"value\",\r\n      \"type\": \"uint256\"\r\n    }\r\n  ],\r\n  \"name\": \"Approval\",\r\n  \"type\": \"event\"\r\n},\r\n{\r\n  \"anonymous\": false,\r\n  \"inputs\": [\r\n    {\r\n      \"indexed\": true,\r\n      \"internalType\": \"address\",\r\n      \"name\": \"previousOwner\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"indexed\": true,\r\n      \"internalType\": \"address\",\r\n      \"name\": \"newOwner\",\r\n      \"type\": \"address\"\r\n    }\r\n  ],\r\n  \"name\": \"OwnershipTransferred\",\r\n  \"type\": \"event\"\r\n},\r\n{\r\n  \"anonymous\": false,\r\n  \"inputs\": [\r\n    {\r\n      \"indexed\": true,\r\n      \"internalType\": \"address\",\r\n      \"name\": \"from\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"indexed\": true,\r\n      \"internalType\": \"address\",\r\n      \"name\": \"to\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"indexed\": false,\r\n      \"internalType\": \"uint256\",\r\n      \"name\": \"value\",\r\n      \"type\": \"uint256\"\r\n    }\r\n  ],\r\n  \"name\": \"Transfer\",\r\n  \"type\": \"event\"\r\n},\r\n{\r\n  \"inputs\": [\r\n    {\r\n      \"internalType\": \"address\",\r\n      \"name\": \"owner\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"internalType\": \"address\",\r\n      \"name\": \"spender\",\r\n      \"type\": \"address\"\r\n    }\r\n  ],\r\n  \"name\": \"allowance\",\r\n  \"outputs\": [\r\n    {\r\n      \"internalType\": \"uint256\",\r\n      \"name\": \"\",\r\n      \"type\": \"uint256\"\r\n    }\r\n  ],\r\n  \"stateMutability\": \"view\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [\r\n    {\r\n      \"internalType\": \"address\",\r\n      \"name\": \"spender\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"internalType\": \"uint256\",\r\n      \"name\": \"amount\",\r\n      \"type\": \"uint256\"\r\n    }\r\n  ],\r\n  \"name\": \"approve\",\r\n  \"outputs\": [\r\n    {\r\n      \"internalType\": \"bool\",\r\n      \"name\": \"\",\r\n      \"type\": \"bool\"\r\n    }\r\n  ],\r\n  \"stateMutability\": \"nonpayable\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [\r\n    {\r\n      \"internalType\": \"address\",\r\n      \"name\": \"account\",\r\n      \"type\": \"address\"\r\n    }\r\n  ],\r\n  \"name\": \"balanceOf\",\r\n  \"outputs\": [\r\n    {\r\n      \"internalType\": \"uint256\",\r\n      \"name\": \"\",\r\n      \"type\": \"uint256\"\r\n    }\r\n  ],\r\n  \"stateMutability\": \"view\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [\r\n    {\r\n      \"internalType\": \"uint256\",\r\n      \"name\": \"amount\",\r\n      \"type\": \"uint256\"\r\n    }\r\n  ],\r\n  \"name\": \"burn\",\r\n  \"outputs\": [],\r\n  \"stateMutability\": \"nonpayable\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [\r\n    {\r\n      \"internalType\": \"address\",\r\n      \"name\": \"account\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"internalType\": \"uint256\",\r\n      \"name\": \"amount\",\r\n      \"type\": \"uint256\"\r\n    }\r\n  ],\r\n  \"name\": \"burnFrom\",\r\n  \"outputs\": [],\r\n  \"stateMutability\": \"nonpayable\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [],\r\n  \"name\": \"decimals\",\r\n  \"outputs\": [\r\n    {\r\n      \"internalType\": \"uint8\",\r\n      \"name\": \"\",\r\n      \"type\": \"uint8\"\r\n    }\r\n  ],\r\n  \"stateMutability\": \"view\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [\r\n    {\r\n      \"internalType\": \"address\",\r\n      \"name\": \"spender\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"internalType\": \"uint256\",\r\n      \"name\": \"subtractedValue\",\r\n      \"type\": \"uint256\"\r\n    }\r\n  ],\r\n  \"name\": \"decreaseAllowance\",\r\n  \"outputs\": [\r\n    {\r\n      \"internalType\": \"bool\",\r\n      \"name\": \"\",\r\n      \"type\": \"bool\"\r\n    }\r\n  ],\r\n  \"stateMutability\": \"nonpayable\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [\r\n    {\r\n      \"internalType\": \"address\",\r\n      \"name\": \"spender\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"internalType\": \"uint256\",\r\n      \"name\": \"addedValue\",\r\n      \"type\": \"uint256\"\r\n    }\r\n  ],\r\n  \"name\": \"increaseAllowance\",\r\n  \"outputs\": [\r\n    {\r\n      \"internalType\": \"bool\",\r\n      \"name\": \"\",\r\n      \"type\": \"bool\"\r\n    }\r\n  ],\r\n  \"stateMutability\": \"nonpayable\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [\r\n    {\r\n      \"internalType\": \"address\",\r\n      \"name\": \"to\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"internalType\": \"uint256\",\r\n      \"name\": \"amount\",\r\n      \"type\": \"uint256\"\r\n    }\r\n  ],\r\n  \"name\": \"mint\",\r\n  \"outputs\": [],\r\n  \"stateMutability\": \"nonpayable\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [],\r\n  \"name\": \"name\",\r\n  \"outputs\": [\r\n    {\r\n      \"internalType\": \"string\",\r\n      \"name\": \"\",\r\n      \"type\": \"string\"\r\n    }\r\n  ],\r\n  \"stateMutability\": \"view\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [],\r\n  \"name\": \"owner\",\r\n  \"outputs\": [\r\n    {\r\n      \"internalType\": \"address\",\r\n      \"name\": \"\",\r\n      \"type\": \"address\"\r\n    }\r\n  ],\r\n  \"stateMutability\": \"view\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [],\r\n  \"name\": \"renounceOwnership\",\r\n  \"outputs\": [],\r\n  \"stateMutability\": \"nonpayable\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [],\r\n  \"name\": \"symbol\",\r\n  \"outputs\": [\r\n    {\r\n      \"internalType\": \"string\",\r\n      \"name\": \"\",\r\n      \"type\": \"string\"\r\n    }\r\n  ],\r\n  \"stateMutability\": \"view\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [],\r\n  \"name\": \"totalSupply\",\r\n  \"outputs\": [\r\n    {\r\n      \"internalType\": \"uint256\",\r\n      \"name\": \"\",\r\n      \"type\": \"uint256\"\r\n    }\r\n  ],\r\n  \"stateMutability\": \"view\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [\r\n    {\r\n      \"internalType\": \"address\",\r\n      \"name\": \"to\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"internalType\": \"uint256\",\r\n      \"name\": \"amount\",\r\n      \"type\": \"uint256\"\r\n    }\r\n  ],\r\n  \"name\": \"transfer\",\r\n  \"outputs\": [\r\n    {\r\n      \"internalType\": \"bool\",\r\n      \"name\": \"\",\r\n      \"type\": \"bool\"\r\n    }\r\n  ],\r\n  \"stateMutability\": \"nonpayable\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [\r\n    {\r\n      \"internalType\": \"address\",\r\n      \"name\": \"from\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"internalType\": \"address\",\r\n      \"name\": \"to\",\r\n      \"type\": \"address\"\r\n    },\r\n    {\r\n      \"internalType\": \"uint256\",\r\n      \"name\": \"amount\",\r\n      \"type\": \"uint256\"\r\n    }\r\n  ],\r\n  \"name\": \"transferFrom\",\r\n  \"outputs\": [\r\n    {\r\n      \"internalType\": \"bool\",\r\n      \"name\": \"\",\r\n      \"type\": \"bool\"\r\n    }\r\n  ],\r\n  \"stateMutability\": \"nonpayable\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"inputs\": [\r\n    {\r\n      \"internalType\": \"address\",\r\n      \"name\": \"newOwner\",\r\n      \"type\": \"address\"\r\n    }\r\n  ],\r\n  \"name\": \"transferOwnership\",\r\n  \"outputs\": [],\r\n  \"stateMutability\": \"nonpayable\",\r\n  \"type\": \"function\"\r\n}\r\n],signer);\r\nconst accounts = await window.ethereum.request({\r\nmethod: \"eth_requestAccounts\",\r\n});\r\nconst erc20bal=await erc20contract.balanceOf(accounts[0])\r\nseterc20Text('Token Imported')\r\nseterc20Class('button-32')\r\nconsole.log(ethers.utils.formatEther(erc20bal));\r\nsetERC20Balance(ethers.utils.formatEther(erc20bal));\r\n  \r\n  \r\n  }\r\n    \r\n    \r\n    }>{erc20text}</button>\r\n    <br></br>\r\n    <br></br>\r\n    </div>:<div></div>}\r\n  \r\n<textarea placeholder=\"Input in the following format:-&#10;0x.....99 43423&#10;0x.....23 23344&#10;<address> <amount>\" rows=\"12\" cols=\"47\" onChange={(e)=>{\r\n        setInputAdd(e.target.value)\r\n        let str=\"\"\r\n        let c=0;\r\n        let arr=[]\r\n        let arr2=[]\r\n        let arr3=[]\r\n        let arrWithoutChange=[]\r\n        let sum=0\r\n        for(let i=0;i<e.target.value.length-1;i++)\r\n        {\r\n            if(e.target.value[i]=='0' && e.target.value[i+1]=='x')\r\n            {\r\n                arr.push(e.target.value.substring(i,i+42))\r\n               str=str+`\"${e.target.value.substring(i,i+42)}\",`\r\n               if(e.target.value[i+42]==',' || e.target.value[i+42]==' ')\r\n               {\r\n                let j=0;\r\n                let str2=\"\";\r\n                for(j=0;j<e.target.value.length-1;j++)\r\n                {\r\n                    if(!((e.target.value[i+42+j+1]>='0' && e.target.value[i+42+j+1]<='9') || e.target.value[i+42+j+1]=='.'))\r\n                    {\r\n                        break;\r\n                    }\r\n                  \r\n                    str2=str2+e.target.value[i+42+j+1]\r\n                    \r\n                   \r\n                }\r\n                sum=sum+parseFloat(str2)\r\n                \r\n      \r\n     \r\n                console.log(str2)\r\n                setAmount(sum)\r\n                arr2.push(ethers.utils.parseEther(str2))\r\n                arr3.push(str2)\r\n                \r\n                \r\n               }\r\n\r\n         \r\n              c=c+1\r\n            }\r\n        }\r\n        console.log(sum)\r\n   \r\n        console.log(arr2)\r\n        setValue(arr2)\r\n        setFinalAdd(arr)\r\n        setValue1(arr3)\r\n       \r\n        setCount(c)\r\n      }}></textarea>\r\n   \r\n<br></br>\r\n\r\n\r\n    \r\n     \r\n<button class=\"button-29\" role=\"button\" onClick={async()=>{\r\n         const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    \r\n        const signer = provider.getSigner();\r\n\r\n       \r\n        const contractAddress = chain;\r\n        \r\n        const contract = new ethers.Contract(\r\n            contractAddress,\r\n            [\r\n                {\r\n                    \"constant\": false,\r\n                    \"inputs\": [\r\n                        {\r\n                            \"name\": \"recipients\",\r\n                            \"type\": \"address[]\"\r\n                        },\r\n                        {\r\n                            \"name\": \"values\",\r\n                            \"type\": \"uint256[]\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"disperseEther\",\r\n                    \"outputs\": [],\r\n                    \"payable\": true,\r\n                    \"stateMutability\": \"payable\",\r\n                    \"type\": \"function\"\r\n                },\r\n                {\r\n                    \"constant\": false,\r\n                    \"inputs\": [\r\n                        {\r\n                            \"name\": \"token\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"name\": \"recipients\",\r\n                            \"type\": \"address[]\"\r\n                        },\r\n                        {\r\n                            \"name\": \"values\",\r\n                            \"type\": \"uint256[]\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"disperseToken\",\r\n                    \"outputs\": [],\r\n                    \"payable\": false,\r\n                    \"stateMutability\": \"nonpayable\",\r\n                    \"type\": \"function\"\r\n                },\r\n                {\r\n                    \"constant\": false,\r\n                    \"inputs\": [\r\n                        {\r\n                            \"name\": \"token\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"name\": \"recipients\",\r\n                            \"type\": \"address[]\"\r\n                        },\r\n                        {\r\n                            \"name\": \"values\",\r\n                            \"type\": \"uint256[]\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"disperseTokenSimple\",\r\n                    \"outputs\": [],\r\n                    \"payable\": false,\r\n                    \"stateMutability\": \"nonpayable\",\r\n                    \"type\": \"function\"\r\n                }\r\n            ],\r\n            signer\r\n        );\r\n\r\n        if(selectMode=='Native' || selectMode=='Select Token')\r\n        {\r\n          contract.disperseEther(finalAdd,value,{ value: ethers.utils.parseEther(amount.toString()) }).then((transaction)=>{\r\n          \r\n            setVisible('visible')\r\n            setTransactionId(transaction.hash)\r\n        }).catch(async(err)=>{\r\n              // alert(err)\r\n          \r\n                        })\r\n        }\r\n        else if(selectMode=='Other')\r\n        { \r\n          \r\n          contract.disperseToken(erc20,finalAdd,value).then((transaction)=>{\r\n          \r\n            setVisible('visible')\r\n            setTransactionId(transaction.hash)\r\n        }).catch(async(err)=>{\r\n              // alert(err)\r\n          \r\n                        })\r\n        }\r\n       \r\n\r\n                            \r\n        \r\n       }}>Tisperse</button>\r\n    <br></br>\r\n   \r\n       \r\n    {account!='Connect Wallet' && finalAdd.length>=1  ? <div style={{'color':'white'}}>\r\n    <br></br>\r\n    <h3 style={{'font-family': 'Bilbo Swash Caps','font-size':'40px'}}>Confirm</h3>\r\n    <table>\r\n    \r\n      <tr>\r\n    <td style={{'font-family': 'Bilbo Swash Caps','font-size':'30px'}}>address</td>\r\n    <th>&nbsp;</th>\r\n    <td style={{'font-family': 'Bilbo Swash Caps','font-size':'30px'}}>amount</td>\r\n    </tr>\r\n    \r\n    {\r\n    \r\n    finalAdd.map((x,y,z)=>{\r\n      return(\r\n        <tr>\r\n          <td>\r\n      {x}\r\n      </td>\r\n      <td>&nbsp;</td>\r\n      <td>{value1[y]}</td>\r\n      </tr>\r\n      )\r\n    })\r\n    \r\n    \r\n    }\r\n    <br></br>\r\n    <tr>\r\n    <td style={{'font-family': 'Bilbo Swash Caps','font-size':'30px'}}>total</td>\r\n    <th>&nbsp;</th>\r\n    <td>{amount}</td>\r\n\r\n    </tr>\r\n    <tr>\r\n    <td style={{'font-family': 'Bilbo Swash Caps','font-size':'30px'}}>your balance</td>\r\n    <th>&nbsp;</th>\r\n    {selectMode=='Native' || selectMode=='Select Token'?<td>{balance}</td>:<td>{ERC20Balance}</td>}\r\n    </tr>\r\n    <tr>\r\n    <td style={{'font-family': 'Bilbo Swash Caps','font-size':'30px'}}>remaining</td>\r\n    <th>&nbsp;</th>\r\n    {selectMode=='Native' || selectMode=='Select Token'?<td>{balance-amount}</td>:<td>{ERC20Balance-amount}</td>}\r\n   \r\n\r\n    </tr>\r\n  \r\n    </table> \r\n    <table>\r\n\r\n    <tr style={{'background-color':'green','visibility':`${visible}`}}>\r\n    {visible!='hidden' &&  <th >\r\n     \r\n     Transaction Id: <a href={`${chainObj[chain].url}${transactionId}`}>{transactionId}</a>\r\n     </th> }\r\n   \r\n   \r\n    \r\n    </tr>\r\n    </table>\r\n\r\n    </div>:<div></div>}\r\n\r\n\r\n</div>\r\n\r\n\r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\n\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  return(\r\n    <>\r\n\r\n  \r\n    <Routes>\r\n      <Route path=\"/\" element={<Home />} />\r\n    \r\n    </Routes>\r\n    \r\n    </>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { MoralisProvider } from \"react-moralis\";\r\nimport { NotificationProvider } from 'web3uikit';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <>\r\n    <MoralisProvider appId=\"xxxxx\" serverUrl=\"xxxxx\">\r\n      <NotificationProvider>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n      </NotificationProvider>\r\n    </MoralisProvider>\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}