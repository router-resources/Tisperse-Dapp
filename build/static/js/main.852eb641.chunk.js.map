{"version":3,"sources":["images/Tisperse3.png","images/Mumbai.png","images/Fuji.png","images/BSC.png","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["ethers","providers","Web3Provider","window","ethereum","Login","useState","account","setAccount","setInputAdd","finalAdd","setFinalAdd","amount","setAmount","value","setValue","setCount","chain","SetChain","value1","setValue1","visible","setVisible","transactionId","setTransactionId","accountShow","setAccountShow","selectChain","balance","setBalance","chainObj","img","Polygon","name","url","BSC","Fuji","requestAccount","a","console","log","request","method","accounts","substring","provider","getBalance","balanc","utils","formatEther","alert","connectWallet","params","chainId","rpcUrls","chainName","nativeCurrency","symbol","decimals","blockExplorerUrls","class","style","src","Tisperse","id","href","role","onClick","type","placeholder","rows","cols","onChange","e","target","c","arr","arr2","arr3","sum","i","length","push","j","str2","parseFloat","parseEther","signer","getSigner","contractAddress","Contract","disperseEther","toString","then","transaction","hash","catch","err","map","x","y","z","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.852eb641.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Tisperse3.ad70607a.png\";","export default __webpack_public_path__ + \"static/media/Mumbai.51b3f0d2.png\";","export default __webpack_public_path__ + \"static/media/Fuji.113f2df2.png\";","export default __webpack_public_path__ + \"static/media/BSC.d4cbb4b4.png\";","import React,{useState} from 'react'\r\nimport Tisperse from '../images/Tisperse3.png'\r\nimport Polygon from '../images/Mumbai.png'\r\nimport Fuji from '../images/Fuji.png'\r\nimport BSC from '../images/BSC.png'\r\nimport { ethers } from 'ethers';\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\nimport './Login.css'\r\nimport { ErrorFragment } from 'ethers/lib/utils'\r\n\r\n// 0xf078259544740e9CA50ed6d73763e02E9D809819\r\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\r\nfunction ModalDialog() {\r\n    const [isShow, invokeModal] = React.useState(false)\r\n    const initModal = () => {\r\n      return invokeModal(!false)\r\n    }\r\n}\r\n  \r\n\r\nfunction Login() {\r\n    const [account,setAccount]=useState('Connect Wallet')\r\n    const [uploadName,setUploadName]=useState('')\r\n    const [uploadLink,setUploadLink]=useState('')\r\n    const [approvalAddress,setApprovalAddress]=useState('')\r\n    const [approvalName,setApprovalName]=useState('')\r\n    const [viewName,setViewName]=useState('')\r\n    const [viewAddress,setViewAddress]=useState('')\r\n    const [inputAdd,setInputAdd]=useState()\r\n    const [finalAdd,setFinalAdd]=useState([])\r\n    const [amount,setAmount]=useState(0)\r\n    const [value,setValue]=useState([{}])\r\n    const [count,setCount]=useState(0)\r\n    const [chain,SetChain]=useState('')\r\n    const [value1,setValue1]=useState([])\r\n    const [visible,setVisible]=useState('hidden')\r\n    const [transactionId, setTransactionId] = useState('');\r\n    const [accountShow,setAccountShow]=useState('')\r\n    const [selectChain,setSelectChain]=useState('select chain')\r\n    const [balance,setBalance]=useState(0)\r\n    \r\n    const chainObj={\r\n\r\n      \"0x2370052a62F20aBb250eD8031b77108fee61e882\":{\r\n        img:Polygon,\r\n        name:\"Polygon Mumbai\",\r\n        url:\"https://mumbai.polygonscan.com/tx/\"\r\n    },\r\n\r\n    \"0x96f0D615EAf63875b094E7591f0735B2315711c3\":{\r\n      img:BSC,\r\n      name:\"BSC Testnet\",\r\n      url:\"https://testnet.bscscan.com/tx/\"\r\n    },\r\n\r\n    \"0x9e6ED12F3531d80671be36e319d5Bc53B106C2bF\":{\r\n      img:Fuji,\r\n      name:\"Avalanche Fuji\",\r\n      url:\"https://testnet.snowtrace.io/tx/\"\r\n      \r\n    }\r\n    }\r\n    const sendMaticToken = async () => {\r\n        try {\r\n          if (typeof window.ethereum !== 'undefined') {\r\n            await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n    \r\n            // Use Polygon Mainnet RPC URL\r\n            const polygonMainnetRPC = 'https://rpc.ankr.com/polygon_mumbai';\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n    \r\n            const toAddress = await signer.getAddress(); // Send to the user's address\r\n            const value = ethers.utils.parseEther('0'); // Send 0.1 MATIC token\r\n    \r\n            const transaction = {\r\n              to: toAddress,\r\n              value: value,\r\n            };\r\n    \r\n            const transactionResponse = await signer.sendTransaction(transaction);\r\n    \r\n            setTransactionId(transactionResponse.hash);\r\n          } else {\r\n            alert('Please install MetaMask.');\r\n          }\r\n        } catch (error) {\r\n          console.error('An error occurred:', error.message);\r\n          alert(`An error occurred: ${error.message}`);\r\n        }\r\n      };\r\n    const connectwalletHandler = () => {\r\n        if (window.Ethereum) {\r\n            provider.send(\"eth_requestAccounts\", []).then(async () => {\r\n                await accountChangedHandler(provider.getSigner());\r\n            })\r\n        } \r\n    }\r\n    const accountChangedHandler = async (newAccount) => {\r\n        const accounts = await newAccount.getAddress();\r\n        setAccount(accounts)\r\n       \r\n    }\r\n    async function qq(){\r\n        // const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        // if(provider)\r\n        // {\r\n        //     const accounts = await provider.listAccounts();\r\n        //     console.log(accounts);\r\n        //     if(accounts[0]!=undefined)\r\n        //     setAccount(accounts[0])\r\n        //     else\r\n          \r\n        //     console.log(provider)\r\n        // }\r\n       \r\n  }\r\n\r\n  async function requestAccount() {\r\n    console.log('Requesting account...');\r\n\r\n    // ❌ Check if Meta Mask Extension exists \r\n    if(window.ethereum) {\r\n      console.log('detected');\r\n\r\n      try {\r\n        const accounts = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        setAccount(accounts[0].substring(0,4)+\"....\"+accounts[0].substring(38,42));\r\n        setAccountShow(accounts[0])\r\n\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const balanc=await provider.getBalance(accounts[0]);\r\n        setBalance(ethers.utils.formatEther(balanc))\r\n\r\n      } catch (error) {\r\n        console.log('Error connecting...');\r\n      }\r\n\r\n    } else {\r\n      alert('Meta Mask not detected');\r\n    }\r\n  }\r\n\r\n  // Create a provider to interact with a smart contract\r\n  async function connectWallet() {\r\n    if(typeof window.ethereum !== 'undefined') {\r\n      await requestAccount();\r\n\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const balanc=provider.getBalance(accountShow);\r\n      setBalance(ethers.utils.formatEther(balanc))\r\n    }\r\n  }\r\n \r\n  async function switchMumbai(){\r\n\r\n    await SetChain('0x2370052a62F20aBb250eD8031b77108fee61e882')\r\n    await window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [{\r\n            chainId: \"0x13881\",\r\n            rpcUrls: [\"https://rpc.ankr.com/polygon_mumbai\"],\r\n            chainName: \"Mumbai testnet by ANKR Protocol\",\r\n            nativeCurrency: {\r\n                name: \"MATIC\",\r\n                symbol: \"MATIC\",\r\n                decimals: 18\r\n            },\r\n            blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\r\n        }]\r\n    });\r\n    connectWallet()\r\n   \r\n    \r\n  }\r\n\r\n  async function switchBSC(){\r\n    await SetChain('0x96f0D615EAf63875b094E7591f0735B2315711c3')\r\n    await window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [{\r\n            chainId: \"0x61\",\r\n            rpcUrls: [\"https://rpc.ankr.com/bsc_testnet_chapel\"],\r\n            chainName: \"BSC testnet by ANKR Protocol\",\r\n            nativeCurrency: {\r\n                name: \"BNB\",\r\n                symbol: \"BNB\",\r\n                decimals: 18\r\n            },\r\n            blockExplorerUrls: [\"https://testnet.bscscan.com\"]\r\n        }]\r\n    });\r\n   \r\n    connectWallet()\r\n  }\r\n\r\n  async function switchFuji(){\r\n\r\n    await SetChain('0x9e6ED12F3531d80671be36e319d5Bc53B106C2bF')\r\n    await window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [{\r\n            chainId: \"0xA869\",\r\n            rpcUrls: [\"https://rpc.ankr.com/avalanche_fuji\"],\r\n            chainName: \"Avalanche Fuji by ANKR Protocol\",\r\n            nativeCurrency: {\r\n                name: \"AVAX\",\r\n                symbol: \"AVAX\",\r\n                decimals: 18\r\n            },\r\n            blockExplorerUrls: [\"https://testnet.snowtrace.io/\"]\r\n        }]\r\n    });\r\n    \r\n    // const balanc=await provider.getBalance(accountShow);\r\n    //     setBalance(ethers.utils.formatEther(balanc))\r\n    connectWallet()\r\n    \r\n  }\r\n\r\n  return (\r\n\r\n    <div >\r\n\r\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\" >\r\n\r\n<img style={{'width':'10em'}} src={Tisperse}></img>\r\n  \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n    <ul class=\"navbar-nav\" >\r\n      \r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          {chain!=''?<img style={{'width':'12em','height':'3em'}} src={chainObj[chain].img}/>:`${selectChain}`}\r\n        </a>\r\n        <div class=\"dropdown-menu bg-dark\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n        <img class=\"dropdown-item\" style={{'width':'12em','height':'3em'}}src={Polygon} onClick={\r\n        switchMumbai\r\n       \r\n       \r\n    }></img>\r\n        <img class=\"dropdown-item\" style={{'width':'12em','height':'3em'}} src={Fuji} onClick={\r\n            switchFuji\r\n        }></img>\r\n        <img class=\"dropdown-item\" style={{'width':'12em','height':'3em'}} src={BSC}    onClick={\r\n        switchBSC\r\n       \r\n        \r\n    }></img>\r\n        </div>\r\n\r\n      </li>\r\n    </ul>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"btn btn-secondary\" onClick={\r\n        \r\n\r\n        connectWallet}>{account}</button>\r\n  </div>\r\n\r\n \r\n</nav>\r\n\r\n\r\n{/* <div class=\"alert alert-primary\" style={{'visibility':`${visible}`}} role=\"alert\">\r\n  A simple primary alert—check it out!\r\n</div> */}\r\n\r\n{/* <Button variant=\"success\" onClick={initModal}>\r\n        Open Modal\r\n      </Button>\r\n      <Modal show={isShow}>\r\n        <Modal.Header closeButton onClick={initModal}>\r\n          <Modal.Title>React Modal Popover Example</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={initModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"dark\" onClick={initModal}>\r\n            Store\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal> */}\r\n\r\n{/* <img style={{'width':'15em'}} src={Tisperse}></img>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\r\n\r\n{/* <button onClick={switchMumbai}>mumbai</button> */}\r\n{/* <img class=\"qw\" style={{'width':'12em'}}src={Polygon} onClick={\r\n        switchMumbai\r\n       \r\n       \r\n    }></img>\r\n        <img class=\"qw\" style={{'width':'12em'}} src={Fuji} onClick={\r\n            switchFuji\r\n        }></img>\r\n        <img class=\"qw\" style={{'width':'12em'}} src={BSC}    onClick={\r\n        switchBSC\r\n       \r\n        \r\n    }></img> */}\r\n\r\n{/* <div class=\"dropdown\">\r\n  <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n    Dropdown button\r\n  </button>\r\n  <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n  <img class=\"dropdown-item\" style={{'width':'12em'}}src={Polygon} onClick={\r\n        switchMumbai\r\n       \r\n       \r\n    }></img>\r\n        <img class=\"dropdown-item\" style={{'width':'12em'}} src={Fuji} onClick={\r\n            switchFuji\r\n        }></img>\r\n        <img class=\"dropdown-item\" style={{'width':'12em'}} src={BSC}    onClick={\r\n        switchBSC\r\n       \r\n        \r\n    }></img>\r\n    \r\n  </div>\r\n</div> */}\r\n        \r\n\r\n            \r\n    \r\n\r\n\r\n       \r\n        {/* <button onClick={\r\n            // const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            //  const accounts = await provider.listAccounts();\r\n            //  console.log(accounts);\r\n            //  if(accounts[0]!=undefined)\r\n            //  setAccount(accounts[0])\r\n            //  else\r\n           \r\n            //  console.log(provider)\r\n\r\n            connectWallet\r\n        }>{account}</button> */}\r\n\r\n       \r\n    <br></br>\r\n    {/* <button onClick={()=>{\r\n        SetChain('0x9e6ED12F3531d80671be36e319d5Bc53B106C2bF')\r\n    }}>Fuji</button>\r\n    <button onClick={()=>{\r\n        SetChain('0x96f0D615EAf63875b094E7591f0735B2315711c3')\r\n    }}>BNB</button>\r\n    <button onClick={()=>{\r\n        SetChain('0x2370052a62F20aBb250eD8031b77108fee61e882')\r\n    }}>Mumbai</button> */}\r\n    {/* <br></br>\r\n    <br></br> */}\r\n   \r\n    {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  */}\r\n\r\n    {/* <textarea placeholder=\"Value\" rows=\"1\" cols=\"47\" onChange={(e)=>{\r\n        setAmount(e.target.value)\r\n    }}></textarea> */}\r\n      {/* <textarea placeholder=\"Amount \" rows=\"1\" cols=\"22\" onChange={(e)=>{\r\n        let str=\"\"\r\n        let arr=[]\r\n\r\n        for(let i=0;i<count;i++)\r\n        {\r\n            str=str+`${e.target.value},`\r\n\r\n            try{\r\n            arr.push(ethers.utils.parseEther(e.target.value.toString()))\r\n        }\r\n        catch(err){\r\n           console.log(err)\r\n        }\r\n    }\r\n  \r\n        // setValue(`[${str.substring(0,str.length-1)}]`)\r\n\r\n        \r\n        setValue(arr)\r\n      }}></textarea> */}\r\n    {/* <br></br>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  */}\r\n\r\n      {/* <textarea placeholder=\"Paste the Wallet Addresses here\" rows=\"12\" cols=\"47\" onChange={(e)=>{\r\n        setInputAdd(e.target.value)\r\n        let str=\"\"\r\n        let c=0;\r\n        let arr=[]\r\n        for(let i=0;i<e.target.value.length-1;i++)\r\n        {\r\n            if(e.target.value[i]=='0' && e.target.value[i+1]=='x')\r\n            {\r\n                arr.push(e.target.value.substring(i,i+42))\r\n               str=str+`\"${e.target.value.substring(i,i+42)}\",`\r\n\r\n              c=c+1\r\n            }\r\n        }\r\n        // setFinalAdd(`[${str.substring(0,str.length-1)}]`)\r\n\r\n        setFinalAdd(arr)\r\n        setCount(c)\r\n      }}></textarea> */}\r\n<div class=\"content\">\r\n\r\n    \r\n\r\n    <br></br>\r\n<textarea placeholder=\"Wallet Address,amount\" rows=\"12\" cols=\"47\" onChange={(e)=>{\r\n        setInputAdd(e.target.value)\r\n        let str=\"\"\r\n        let c=0;\r\n        let arr=[]\r\n        let arr2=[]\r\n        let arr3=[]\r\n        let arrWithoutChange=[]\r\n        let sum=0\r\n        for(let i=0;i<e.target.value.length-1;i++)\r\n        {\r\n            if(e.target.value[i]=='0' && e.target.value[i+1]=='x')\r\n            {\r\n                arr.push(e.target.value.substring(i,i+42))\r\n               str=str+`\"${e.target.value.substring(i,i+42)}\",`\r\n               if(e.target.value[i+42]==',' || e.target.value[i+42]==' ')\r\n               {\r\n                let j=0;\r\n                let str2=\"\";\r\n                for(j=0;j<e.target.value.length-1;j++)\r\n                {\r\n                    if(!((e.target.value[i+42+j+1]>='0' && e.target.value[i+42+j+1]<='9') || e.target.value[i+42+j+1]=='.'))\r\n                    {\r\n                        break;\r\n                    }\r\n                    // console.log(e.target.value[i+42+j+1])\r\n                    str2=str2+e.target.value[i+42+j+1]\r\n                    \r\n                   \r\n                }\r\n                sum=sum+parseFloat(str2)\r\n                \r\n      \r\n     \r\n                console.log(str2)\r\n                setAmount(sum)\r\n                arr2.push(ethers.utils.parseEther(str2))\r\n                arr3.push(str2)\r\n                \r\n                // arr2.push(ethers.utils.parseEther(e.target.value.substring(i+43,i+43+j+1).toString()))\r\n               }\r\n\r\n            //    setValue(arr2)\r\n            //    console.log(arr2)\r\n              c=c+1\r\n            }\r\n        }\r\n        console.log(sum)\r\n        // setFinalAdd(`[${str.substring(0,str.length-1)}]`)\r\n        console.log(arr2)\r\n        setValue(arr2)\r\n        setFinalAdd(arr)\r\n        setValue1(arr3)\r\n       \r\n        setCount(c)\r\n      }}></textarea>\r\n   \r\n<br></br>\r\n\r\n\r\n    \r\n      {/* <button onClick={()=>{\r\n       console.log(finalAdd)\r\n       console.log(value)\r\n      }}>Add</button> */}\r\n\r\n     \r\n<button class=\"button-29\" role=\"button\" onClick={async()=>{\r\n         const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    \r\n        const signer = provider.getSigner();\r\n\r\n        // const contractAddress = \"0x9e6ED12F3531d80671be36e319d5Bc53B106C2bF\";\r\n        const contractAddress = chain;\r\n        \r\n        const contract = new ethers.Contract(\r\n            contractAddress,\r\n            [\r\n                {\r\n                    \"constant\": false,\r\n                    \"inputs\": [\r\n                        {\r\n                            \"name\": \"recipients\",\r\n                            \"type\": \"address[]\"\r\n                        },\r\n                        {\r\n                            \"name\": \"values\",\r\n                            \"type\": \"uint256[]\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"disperseEther\",\r\n                    \"outputs\": [],\r\n                    \"payable\": true,\r\n                    \"stateMutability\": \"payable\",\r\n                    \"type\": \"function\"\r\n                },\r\n                {\r\n                    \"constant\": false,\r\n                    \"inputs\": [\r\n                        {\r\n                            \"name\": \"token\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"name\": \"recipients\",\r\n                            \"type\": \"address[]\"\r\n                        },\r\n                        {\r\n                            \"name\": \"values\",\r\n                            \"type\": \"uint256[]\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"disperseToken\",\r\n                    \"outputs\": [],\r\n                    \"payable\": false,\r\n                    \"stateMutability\": \"nonpayable\",\r\n                    \"type\": \"function\"\r\n                },\r\n                {\r\n                    \"constant\": false,\r\n                    \"inputs\": [\r\n                        {\r\n                            \"name\": \"token\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"name\": \"recipients\",\r\n                            \"type\": \"address[]\"\r\n                        },\r\n                        {\r\n                            \"name\": \"values\",\r\n                            \"type\": \"uint256[]\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"disperseTokenSimple\",\r\n                    \"outputs\": [],\r\n                    \"payable\": false,\r\n                    \"stateMutability\": \"nonpayable\",\r\n                    \"type\": \"function\"\r\n                }\r\n            ],\r\n            signer\r\n        );\r\n        // contract.disperseEther([\"0x9a5a7f6296Cea968511A7501a773eec8dd60369D\",\"0x9a5a7f6296Cea968511A7501a773eec8dd60369D\"],[ethers.utils.parseEther(\"0.1\"),ethers.utils.parseEther(\"0.1\")],{ value: ethers.utils.parseEther(\"1\") }).then(()=>{\r\n        //     alert('successfully uploaded')\r\n        // }).catch(()=>{\r\n        //     alert('erreo uploading document')\r\n        // })\r\n\r\n        contract.disperseEther(finalAdd,value,{ value: ethers.utils.parseEther(amount.toString()) }).then((transaction)=>{\r\n            // alert('Transaction Successful')\r\n            setVisible('visible')\r\n            setTransactionId(transaction.hash)\r\n        }).catch(async(err)=>{\r\n        alert(err)\r\n          \r\n                        })\r\n\r\n                            \r\n        \r\n       }}>Tisperse</button>\r\n    <br></br>\r\n   \r\n       \r\n    {account!='Connect Wallet' && finalAdd.length>=1  ? <div style={{'color':'white'}}>\r\n    <br></br>\r\n    <h3>Confirm</h3>\r\n    <table>\r\n    \r\n      <tr>\r\n    <th>address</th>\r\n    <th>&nbsp;</th>\r\n    <th>amount</th>\r\n    </tr>\r\n    \r\n    {\r\n    \r\n    finalAdd.map((x,y,z)=>{\r\n      return(\r\n        <tr>\r\n          <td>\r\n      {x}\r\n      </td>\r\n      <td>&nbsp;</td>\r\n      <td>{value1[y]}</td>\r\n      </tr>\r\n      )\r\n    })\r\n    \r\n    \r\n    }\r\n    <br></br>\r\n    <tr>\r\n    <th>total</th>\r\n    <th>&nbsp;</th>\r\n    <td>{amount}</td>\r\n\r\n    </tr>\r\n    <tr>\r\n    <th>your balance</th>\r\n    <th>&nbsp;</th>\r\n    <td>{balance}</td>\r\n\r\n    </tr>\r\n    <tr>\r\n    <th>remaining</th>\r\n    <th>&nbsp;</th>\r\n    <td>{balance-amount}</td>\r\n    {/* <td>{chain}</td> */}\r\n\r\n    </tr>\r\n  \r\n    </table> \r\n    <table>\r\n\r\n    <tr style={{'background-color':'green','visibility':`${visible}`}}>\r\n    {visible!='hidden' &&  <th>\r\n     \r\n     Transaction Id: <a href={`${chainObj[chain].url}${transactionId}`}>{transactionId}</a>\r\n     </th> }\r\n   \r\n   \r\n    \r\n    </tr>\r\n    </table>\r\n    {/* qwerty {finalAdd[0]} */}\r\n    </div>:<div></div>}\r\n\r\n\r\n</div>\r\n\r\n\r\n       {/* <button onClick={async()=>{\r\n        const signer = provider.getSigner();\r\n\r\n        // const contractAddress = \"0x9e6ED12F3531d80671be36e319d5Bc53B106C2bF\";\r\n        const contractAddress = chain;\r\n        \r\n        const contract = new ethers.Contract(\r\n            contractAddress,\r\n            [\r\n                {\r\n                    \"constant\": false,\r\n                    \"inputs\": [\r\n                        {\r\n                            \"name\": \"recipients\",\r\n                            \"type\": \"address[]\"\r\n                        },\r\n                        {\r\n                            \"name\": \"values\",\r\n                            \"type\": \"uint256[]\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"disperseEther\",\r\n                    \"outputs\": [],\r\n                    \"payable\": true,\r\n                    \"stateMutability\": \"payable\",\r\n                    \"type\": \"function\"\r\n                },\r\n                {\r\n                    \"constant\": false,\r\n                    \"inputs\": [\r\n                        {\r\n                            \"name\": \"token\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"name\": \"recipients\",\r\n                            \"type\": \"address[]\"\r\n                        },\r\n                        {\r\n                            \"name\": \"values\",\r\n                            \"type\": \"uint256[]\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"disperseToken\",\r\n                    \"outputs\": [],\r\n                    \"payable\": false,\r\n                    \"stateMutability\": \"nonpayable\",\r\n                    \"type\": \"function\"\r\n                },\r\n                {\r\n                    \"constant\": false,\r\n                    \"inputs\": [\r\n                        {\r\n                            \"name\": \"token\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"name\": \"recipients\",\r\n                            \"type\": \"address[]\"\r\n                        },\r\n                        {\r\n                            \"name\": \"values\",\r\n                            \"type\": \"uint256[]\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"disperseTokenSimple\",\r\n                    \"outputs\": [],\r\n                    \"payable\": false,\r\n                    \"stateMutability\": \"nonpayable\",\r\n                    \"type\": \"function\"\r\n                }\r\n            ],\r\n            signer\r\n        );\r\n        // contract.disperseEther([\"0x9a5a7f6296Cea968511A7501a773eec8dd60369D\",\"0x9a5a7f6296Cea968511A7501a773eec8dd60369D\"],[ethers.utils.parseEther(\"0.1\"),ethers.utils.parseEther(\"0.1\")],{ value: ethers.utils.parseEther(\"1\") }).then(()=>{\r\n        //     alert('successfully uploaded')\r\n        // }).catch(()=>{\r\n        //     alert('erreo uploading document')\r\n        // })\r\n\r\n        contract.disperseEther(finalAdd,value,{ value: ethers.utils.parseEther(amount.toString()) }).then(()=>{\r\n            alert('successfully uploaded')\r\n        }).catch((err)=>{\r\n            alert(err)\r\n        })\r\n        \r\n       }}>send</button> */}\r\n       <br></br>\r\n       {/* {inputAdd}\r\n       <br></br> */}\r\n       <br></br>\r\n       {/* {finalAdd}\r\n       <br></br>\r\n       {count}\r\n       <br></br>\r\n       <br></br>\r\n       {value} */}\r\n       {/* {inputAdd[131]} */}\r\n       {/* {value.length} */}\r\n\r\n       {/* {chain}\r\n       {amount}\r\n       {value} */}\r\n       \r\n{/* { value: ethers.utils.parseEther(\"0.1\") } */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from './pages/Login'\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  return(\r\n    <>\r\n\r\n  \r\n    <Routes>\r\n      <Route path=\"/\" element={<Login />} />\r\n    \r\n      <Route path=\"/login\" element={<Login />} />\r\n    </Routes>\r\n    \r\n    </>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { MoralisProvider } from \"react-moralis\";\r\nimport { NotificationProvider } from 'web3uikit';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MoralisProvider appId=\"xxxxx\" serverUrl=\"xxxxx\">\r\n      <NotificationProvider>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n      </NotificationProvider>\r\n    </MoralisProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}